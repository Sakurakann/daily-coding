----------------------------------------
-- 创建一个初始值为10M,内容自动扩充的表空间 --
----------------------------------------
CREATE TABLESPACE BASE_CRUD DATAFILE 'E:\DATA\BASE_CRUD.DBF'
SIZE 10M AUTOEXTEND ON NEXT 10M MAXSIZE 50M;

-- 查看创建的表空间 --
SELECT FILE_NAME, TABLESPACE_NAME, BYTES, AUTOEXTENSIBLE,
FROM DBA_DATA_FILES
WHERE TABLESPACE_NAME = 'BASE_CRUD';

-- 调整表空间的大小 --
ALTER DATABASE DATAFILE 'D:\DATA\BASE_CRUD.DBF' SIZE 60M;

ALTER TABLESPACE BASE_CRUD ADD DATAFILE 'E:\DATA\ORIGINAL.DBF'
SIZE 20M AUTOEXTEND ON;

-- 删除表空间 --
DROP TABLESPACE BASE_CRUD;
-- 删除表空间及其中的数据 --
DROP TABLESPACE BASE_CRUD INCLUDING CONTENTS;

-- 创建用户 --
CREATE USER SKNN IDENTIFIED BY SAKURA
DEFAULT TABLESPACE BASE_CURD
TEMPORARY TABLESPACE TEMP
QUOTA UNLIMITED ON BASE_CRUD
PASSWORD EXPIRE; -- 口令为过期状态, 即首次连接数据库时需要修改口令;

-- 查看创建的用户 --
SELECT * FROM DBA_USERS WHERE USERNAME = 'SKNN';

-- 授权用户 --
GRANT ALTER USER, CREATE ANY VIEW, DROP ANY VIEW, EXP_FULL_DATABASE,  IMP_FULL_DATABASE,
CONNECT, RESOURCE, CREATE SESSION TO SKNN;

-- 取消授权 --
REVOKE UNLIMITED TABLESPACE FROM SKNN;

-- 删除用户 --
DROP USER SKNN CASCADE;

-- 查看当前用户所拥有的表 --
SELECT TABLE_NAME FROM USER_TABLES;

-- 创建用户信息表 --
CREATE TABLE SUSER(
  "UID" NUMBER NOT NULL PRIMARY KEY,
  USER_NAME VARCHAR2(32) NOT NULL,
  PASS_WORD VARCHAR2(32) NOT NULL,
  "SALT" VARCHAR2(16),
  E_MAIL VARCHAR2(64),
  REMARK VARCHAR2(128));
COMMENT ON TABLE SUSER IS '用户信息表'; -- 添加注释
COMMENT ON COLUMN SUSER."UID" IS '用户标识ID';
COMMENT ON COLUMN SUSER."USER_NAME" IS '用户登录名';
COMMENT ON COLUMN SUSER."PASS_WORD" IS '用户密码';
COMMENT ON COLUMN SUSER."SALT" IS '密码盐';
COMMENT ON COLUMN SUSER."E_MAIL" IS '邮箱';
COMMENT ON COLUMN SUSER."REMARK" IS '备注';

-- 查看表注释 --
SELECT * FROM USER_TAB_COMMENTS WHERE TABLE_NAME='SUSER';

-- 查看表字段注释 --
SELECT * FROM USER_COL_COMMENTS WHERE TABLE_NAME = 'SUSER';

-- 创建一个序列, 作为uid自增的变量 --
CREATE SEQUENCE SEQ_SUSER_UID
INCREMENT BY 1 -- 自增1
START WITH 1 -- 从1开始
NOMAXVALUE -- 不设最大值; MAXVALUE 99999
CACHE 20 -- 默认20; NO CACHE; 对序列进行内存缓冲, 可以改善序列的性能.
NOCYCLE -- 不循环,表示当序列生成器的值达到限制值后是否循环; CYCLE
ORDER;

-- 创建uid自增触发器 --
CREATE OR REPLACE TRIGGER TG_SUSER_UID
BEFORE INSERT ON SUSER
FOR EACH ROW
BEGIN
  SELECT SEQ_SUSER_UID.NEXTVAL INTO :NEW.UID FROM DUAL;
END;

